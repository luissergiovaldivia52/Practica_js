{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofia\\\\Documents\\\\Cursos_plc\\\\Full Stack Development\\\\FT-M2\\\\08-React-Estado-LifeCycle\\\\homework\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Nav from './components/Nav';\nimport Cards from './components/Cards';\nconst apiKey = \"4ae2636d8dfbdc3044bede63951a019b\";\nexport default function App() {\n  const [cities, setCities] = React.useState([]);\n\n  function onSearch(ciudad) {\n    //Acá habría que hacer el llamado a la API para obtener los datos de la ciudad\n    //pero de momento agregaremos una ciudad por default para ver que funcione\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encotrada\");\n      }\n    });\n  }\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id != id));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    onSearch: onSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Cards, {\n    cities: cities,\n    onClose: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/Sofia/Documents/Cursos_plc/Full Stack Development/FT-M2/08-React-Estado-LifeCycle/homework/src/App.js"],"names":["React","Nav","Cards","apiKey","App","cities","setCities","useState","onSearch","ciudad","fetch","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","id","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","oldCities","alert","onClose","filter","c"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,MAAM,GAAG,kCAAf;AAMA,eAAe,SAASC,GAAT,GAAe;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,KAAK,CAACO,QAAN,CAAe,EAAf,CAA5B;;AAEA,WAASC,QAAT,CAAkBC,MAAlB,EAAyB;AACxB;AACE;AAEHC,IAAAA,KAAK,CACF,oDAAmDD,MAAO,UAASN,MAAO,eADxE,CAAL,CAICQ,IAJD,CAIOC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAJb,EAKMF,IALN,CAKYG,OAAD,IAAa;AACjB,UAAIA,OAAO,CAACC,IAAR,KAAiBC,SAArB,EAAgC;AAC9B,cAAMP,MAAM,GAAG;AACbQ,UAAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaK,QAAxB,CADQ;AAEbC,UAAAA,GAAG,EAAEH,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaO,QAAxB,CAFQ;AAGbC,UAAAA,GAAG,EAAET,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBC,IAHX;AAIbC,UAAAA,EAAE,EAAEZ,OAAO,CAACY,EAJC;AAKbC,UAAAA,IAAI,EAAEb,OAAO,CAACa,IAAR,CAAaC,KALN;AAMbC,UAAAA,IAAI,EAAEf,OAAO,CAACC,IAAR,CAAac,IANN;AAObC,UAAAA,IAAI,EAAEhB,OAAO,CAACgB,IAPD;AAQbN,UAAAA,OAAO,EAAEV,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBT,IARf;AASbgB,UAAAA,MAAM,EAAEjB,OAAO,CAACiB,MAAR,CAAeC,GATV;AAUbC,UAAAA,OAAO,EAAEnB,OAAO,CAACoB,KAAR,CAAcC,GAVV;AAWbC,UAAAA,QAAQ,EAAEtB,OAAO,CAACoB,KAAR,CAAcG;AAXX,SAAf;AAcN/B,QAAAA,SAAS,CAAEgC,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAe7B,MAAf,CAAhB,CAAT;AACD,OAhBK,MAgBA;AACL8B,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACA;AACD,KAzBD;AA0BA;;AAED,WAASC,OAAT,CAAiBd,EAAjB,EAAoB;AACnBpB,IAAAA,SAAS,CAAEgC,SAAD,IAAcA,SAAS,CAACG,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAAChB,EAAF,IAAQA,EAAhC,CAAf,CAAT;AACA;;AAEA,SACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC,oBAAC,GAAD;AAAM,IAAA,QAAQ,EAAElB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEH,MAAf;AAAuB,IAAA,OAAO,EAAEmC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADD;AAQA","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Nav from './components/Nav';\r\nimport Cards from './components/Cards';\r\n\r\nconst apiKey = \"4ae2636d8dfbdc3044bede63951a019b\"\r\n\r\n\r\n\r\n\r\n\r\nexport default function App() {\r\n\tconst [cities, setCities] = React.useState([]);\r\n\r\n\tfunction onSearch(ciudad){\r\n\t\t//Acá habría que hacer el llamado a la API para obtener los datos de la ciudad\r\n    //pero de momento agregaremos una ciudad por default para ver que funcione\r\n\t\r\n\tfetch(\r\n\t\t `http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`\r\n\t)\r\n\r\n\t.then((r) => r.json())\r\n      .then((recurso) => {\r\n        if (recurso.main !== undefined) {\r\n          const ciudad = {\r\n            min: Math.round(recurso.main.temp_min),\r\n            max: Math.round(recurso.main.temp_max),\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: recurso.main.temp,\r\n            name: recurso.name,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon,\r\n          };\r\n\r\n\t\t  setCities((oldCities) => [...oldCities, ciudad]);\r\n\t\t} else{\r\n\t\t\talert(\"Ciudad no encotrada\");\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction onClose(id){\r\n\tsetCities((oldCities)=> oldCities.filter((c) => c.id != id));\r\n}\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{/* Tu código acá: */}\r\n\t\t\t<Nav  onSearch={onSearch}/>\r\n\t\t\t<Cards cities={cities} onClose={onClose}/>\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}